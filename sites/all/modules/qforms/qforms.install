<?php

/**
 * @file
 */

/**
 * Implementation of hook_requirements().
 */
function qforms_requirements($phase) {
  $requirements = array();

  // Ensure translations don't break at install time
  $t = get_t();

  $path = drupal_get_path('module', 'qforms') . '/js';

  // Check for jquery.scrollTo-min.js file.
  if (file_exists($path . '/jquery.scrollTo-min.js')) {
    $requirements['qforms_scrollTo'] = array(
      'title' => $t('Qforms scrollTo'),
      'value' => $t('OK'),
      'description' => $t('Founded jquery.scrollTo-min.js file. Qforms will use it for fine scrolling effect while adding form items.'),
      'severity' => REQUIREMENT_OK,
    );
  }
  else {
    $requirements['qforms_scrollTo'] = array(
      'title' => $t('Qforms scrollTo'),
      'value' => $t('Missing'),
      'description' => $t('Missing jquery.scrollTo-min.js file. If you want that qforms do fine scrolling effect while adding form items please copy jquery.scrollTo-min.js file to !path folder.', array('!path' => $path)),
      'severity' => REQUIREMENT_INFO,
    );
  }

  return $requirements;
}

/**
 * Implementation of hook_install().
 */
function qforms_install() {
}

/**
* Implementation of hook_enable().
*/
function qforms_enable() {
}

/**
 * Implementation of hook_schema().
 */
function qforms_schema() {
  $schema['qforms_definition'] = array(
    'description' => 'Hold qforms definitions.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node nid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'form_definition' => array(
        'description' => 'Form definition.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
      'form_options' => array(
        'description' => 'Other options.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['qforms_submission'] = array(
    'description' => 'Hold qforms submited data.',
    'fields' => array(
      'sid' => array(
        'description' => 'Submission id.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'time' => array(
        'description' => 'The Unix timestamp when data was submited.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'ip' => array(
        'description' => 'The IP address of the user that submitted the form.',
        'type' => 'varchar',
        'length' => 128,
      ),
      'data' => array(
        'description' => 'Qforms submitted data.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
    ),
    'primary key' => array('sid'),
  );

  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function qforms_uninstall() {
}
